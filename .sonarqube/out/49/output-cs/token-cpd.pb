ë#
ÅC:\Users\jay.ahir\Desktop\OrchardCore-main\OrchardCore-main\src\OrchardCore\OrchardCore.Apis.GraphQL.Client\ContentPartBuilder.cs
	namespace 	
OrchardCore
 
. 
Apis 
. 
GraphQL "
." #
Client# )
{ 
public 

class 
ContentPartBuilder #
{ 
private		 
string		 
_contentPartName		 '
;		' (
private 

Dictionary 
< 
string !
,! "
string# )
>) *
_keysWithValues+ :
=; <
new= @

DictionaryA K
<K L
stringL R
,R S
stringT Z
>Z [
([ \
)\ ]
;] ^
private 
List 
< 
string 
> 
_keys "
=# $
new% (
List) -
<- .
string. 4
>4 5
(5 6
)6 7
;7 8
public 
ContentPartBuilder !
(! "
string" (
contentPartName) 8
)8 9
{ 	
_contentPartName 
= 
contentPartName .
;. /
} 	
public 
ContentPartBuilder !
AddField" *
(* +
string+ 1
name2 6
,6 7
string8 >
value? D
)D E
{ 	
_keysWithValues 
. 
Add 
(  
name  $
.$ %!
ToGraphQLStringFormat% :
(: ;
); <
,< =
value> C
)C D
;D E
return 
this 
; 
} 	
public 
ContentPartBuilder !
AddField" *
(* +
string+ 1
name2 6
)6 7
{ 	
_keys 
. 
Add 
( 
name 
) 
; 
return 
this 
; 
} 	
internal!! 
string!! 
Build!! 
(!! 
)!! 
{"" 	
var## 
sb## 
=## 
new## 
StringBuilder## &
(##& '
)##' (
;##( )
sb$$ 
.$$ 
Append$$ 
($$ 
_contentPartName$$ &
)$$& '
.$$' (
Append$$( .
($$. /
$str$$/ 6
)$$6 7
;$$7 8
for&& 
(&& 
var&& 
i&& 
=&& 
$num&& 
;&& 
i&& 
<&& 
_keysWithValues&&  /
.&&/ 0
Count&&0 5
;&&5 6
i&&7 8
++&&8 :
)&&: ;
{'' 
var(( 
item(( 
=(( 
_keysWithValues(( *
.((* +
	ElementAt((+ 4
(((4 5
i((5 6
)((6 7
;((7 8
sb)) 
.)) 
Append)) 
()) 
item)) 
.)) 
Key)) "
)))" #
.))# $
Append))$ *
())* +
$str))+ 1
)))1 2
.))2 3
Append))3 9
())9 :
item)): >
.))> ?
Value))? D
)))D E
.))E F
Append))F L
())L M
$char))M P
)))P Q
;))Q R
if++ 
(++ 
i++ 
<++ 
(++ 
_keysWithValues++ (
.++( )
Count++) .
-++/ 0
$num++1 2
)++2 3
)++3 4
{,, 
sb-- 
.-- 
Append-- 
(-- 
$char-- !
)--! "
;--" #
}.. 
}// 
foreach11 
(11 
var11 
item11 
in11  
_keys11! &
)11& '
{22 
sb33 
.33 
Append33 
(33 
item33 
)33 
.33  
Append33  &
(33& '
$char33' *
)33* +
;33+ ,
}44 
sb66 
.66 
Append66 
(66 
$str66 
)66 
;66 
return88 
sb88 
.88 
ToString88 
(88 
)88  
;88  !
}99 	
}:: 
};; ß3
~C:\Users\jay.ahir\Desktop\OrchardCore-main\OrchardCore-main\src\OrchardCore\OrchardCore.Apis.GraphQL.Client\ContentResource.cs
	namespace 	
OrchardCore
 
. 
Apis 
. 
GraphQL "
." #
Client# )
{ 
public 

class 
ContentResource  
{		 
private

 

HttpClient

 
_client

 "
;

" #
public 
ContentResource 
( 

HttpClient )
client* 0
)0 1
{ 	
_client 
= 
client 
; 
} 	
public 
async 
Task 
< 
JObject !
>! "
Query# (
(( )
string) /
contentType0 ;
,; <
Action= C
<C D+
ContentTypeQueryResourceBuilderD c
>c d
buildere l
)l m
{ 	
var 
contentTypeBuilder "
=# $
new% (+
ContentTypeQueryResourceBuilder) H
(H I
contentTypeI T
)T U
;U V
builder 
( 
contentTypeBuilder &
)& '
;' (
var 
requestJson 
= 
new !
JObject" )
() *
new 
	JProperty 
( 
$str %
,% &
$str' 2
+3 4
contentTypeBuilder5 G
.G H
BuildH M
(M N
)N O
+P Q
$strR V
)V W
) 
; 
var 
response 
= 
await  
_client! (
. 
PostJsonAsync 
( 
$str ,
,, -
requestJson. 9
.9 :
ToString: B
(B C
)C D
)D E
;E F
if 
( 
! 
response 
. 
IsSuccessStatusCode -
&&. 0
response1 9
.9 :

StatusCode: D
!=E G
SystemH N
.N O
NetO R
.R S
HttpStatusCodeS a
.a b
Unauthorizedb n
)n o
{ 
throw 
new 
	Exception #
(# $
response$ ,
., -

StatusCode- 7
.7 8
ToString8 @
(@ A
)A B
+C D
$strE H
+I J
awaitK P
responseQ Y
.Y Z
ContentZ a
.a b
ReadAsStringAsyncb s
(s t
)t u
)u v
;v w
}   
return"" 
JObject"" 
."" 
Parse""  
(""  !
await""! &
response""' /
.""/ 0
Content""0 7
.""7 8
ReadAsStringAsync""8 I
(""I J
)""J K
)""K L
;""L M
}## 	
public%% 
async%% 
Task%% 
<%% 
JObject%% !
>%%! "
Query%%# (
(%%( )
string%%) /
body%%0 4
)%%4 5
{&& 	
var'' 
requestJson'' 
='' 
new'' !
JObject''" )
('') *
new(( 
	JProperty(( 
((( 
$str(( %
,((% &
$str((' 2
+((3 4
body((5 9
+((: ;
$str((< @
)((@ A
))) 
;)) 
var++ 
response++ 
=++ 
await++  
_client++! (
.++( )
PostJsonAsync++) 6
(++6 7
$str++7 D
,++D E
requestJson++F Q
.++Q R
ToString++R Z
(++Z [
)++[ \
)++\ ]
;++] ^
if-- 
(-- 
!-- 
response-- 
.-- 
IsSuccessStatusCode-- -
)--- .
{.. 
throw// 
new// 
	Exception// #
(//# $
response//$ ,
.//, -

StatusCode//- 7
.//7 8
ToString//8 @
(//@ A
)//A B
+//C D
$str//E H
+//I J
await//K P
response//Q Y
.//Y Z
Content//Z a
.//a b
ReadAsStringAsync//b s
(//s t
)//t u
)//u v
;//v w
}00 
return22 
JObject22 
.22 
Parse22  
(22  !
await22! &
response22' /
.22/ 0
Content220 7
.227 8
ReadAsStringAsync228 I
(22I J
)22J K
)22K L
;22L M
}33 	
public55 
async55 
Task55 
<55 
JObject55 !
>55! "
NamedQueryExecute55# 4
(554 5
string555 ;
name55< @
)55@ A
{66 	
var77 
requestJson77 
=77 
new77 !
JObject77" )
(77) *
new88 
	JProperty88 
(88 
$str88 *
,88* +
name88, 0
)880 1
)99 
;99 
var;; 
response;; 
=;; 
await;;  
_client;;! (
.;;( )
PostJsonAsync;;) 6
(;;6 7
$str;;7 D
,;;D E
requestJson;;F Q
.;;Q R
ToString;;R Z
(;;Z [
);;[ \
);;\ ]
;;;] ^
if== 
(== 
!== 
response== 
.== 
IsSuccessStatusCode== -
)==- .
{>> 
throw?? 
new?? 
	Exception?? #
(??# $
response??$ ,
.??, -

StatusCode??- 7
.??7 8
ToString??8 @
(??@ A
)??A B
+??C D
$str??E H
+??I J
await??K P
response??Q Y
.??Y Z
Content??Z a
.??a b
ReadAsStringAsync??b s
(??s t
)??t u
)??u v
;??v w
}@@ 
returnBB 
JObjectBB 
.BB 
ParseBB  
(BB  !
awaitBB! &
responseBB' /
.BB/ 0
ContentBB0 7
.BB7 8
ReadAsStringAsyncBB8 I
(BBI J
)BBJ K
)BBK L
;BBL M
}CC 	
}DD 
}EE Ù1
èC:\Users\jay.ahir\Desktop\OrchardCore-main\OrchardCore-main\src\OrchardCore\OrchardCore.Apis.GraphQL.Client\ContentTypeCreateResourceBuilder.cs
	namespace 	
OrchardCore
 
. 
Apis 
. 
GraphQL "
." #
Client# )
{ 
public 

class ,
 ContentTypeCreateResourceBuilder 1
{ 
private 
IDictionary 
< 
string "
," #
object$ *
>* +
_values, 3
=4 5
new6 9

Dictionary: D
<D E
stringE K
,K L
objectM S
>S T
(T U
)U V
;V W
private

 
List

 
<

 
ContentPartBuilder

 '
>

' (
contentPartBuilders

) <
=

= >
new

? B
List

C G
<

G H
ContentPartBuilder

H Z
>

Z [
(

[ \
)

\ ]
;

] ^
private 
string 
ContentType "
{# $
get% (
;( )
set* -
;- .
}/ 0
public ,
 ContentTypeCreateResourceBuilder /
(/ 0
string0 6
contentType7 B
)B C
{ 	
ContentType 
= 
contentType %
;% &
} 	
public 
ContentPartBuilder !
WithContentPart" 1
(1 2
string2 8
contentPartName9 H
)H I
{ 	
var 
builder 
= 
new 
ContentPartBuilder 0
(0 1
contentPartName1 @
.@ A!
ToGraphQLStringFormatA V
(V W
)W X
)X Y
;Y Z
contentPartBuilders 
.  
Add  #
(# $
builder$ +
)+ ,
;, -
return 
builder 
; 
} 	
public ,
 ContentTypeCreateResourceBuilder /
	WithField0 9
(9 :
string: @
keyA D
,D E
objectF L
valueM R
)R S
{ 	
_values 
. 
Add 
( 
key 
, 
value "
)" #
;# $
return 
this 
; 
} 	
internal!! 
string!! 
Build!! 
(!! 
)!! 
{"" 	
var## 
sbo## 
=## 
new## 
StringBuilder## '
(##' (
)##( )
;##) *
sbo%% 
.%% 
Append%% 
(%% 
ContentType%% "
.%%" #!
ToGraphQLStringFormat%%# 8
(%%8 9
)%%9 :
)%%: ;
.%%; <

AppendLine%%< F
(%%F G
$str%%G L
)%%L M
;%%M N
foreach'' 
('' 
var'' 
value'' 
in'' !
_values''" )
)'') *
{(( 
var)) 
key)) 
=)) 
value)) 
.))  
Key))  #
;))# $
if++ 
(++ 
value++ 
.++ 
Value++ 
is++  "
string++# )
)++) *
{,, 
sbo-- 
.-- 
Append-- 
(-- 
key-- "
)--" #
.--# $
Append--$ *
(--* +
$str--+ 1
)--1 2
.--2 3
Append--3 9
(--9 :
value--: ?
.--? @
Value--@ E
)--E F
.--F G
Append--G M
(--M N
$char--N Q
)--Q R
.--R S

AppendLine--S ]
(--] ^
)--^ _
;--_ `
}.. 
else// 
if// 
(// 
value// 
.// 
Value// $
is//% '
bool//( ,
)//, -
{00 
sbo11 
.11 
Append11 
(11 
key11 "
)11" #
.11# $
Append11$ *
(11* +
$str11+ /
)11/ 0
.110 1
Append111 7
(117 8
(118 9
(119 :
bool11: >
)11> ?
value11? D
.11D E
Value11E J
)11J K
.11K L
ToString11L T
(11T U
)11U V
.11V W
ToLowerInvariant11W g
(11g h
)11h i
)11i j
.11j k

AppendLine11k u
(11u v
)11v w
;11w x
}22 
else33 
{44 
sbo55 
.55 
Append55 
(55 
key55 "
)55" #
.55# $
Append55$ *
(55* +
$str55+ /
)55/ 0
.550 1
Append551 7
(557 8
value558 =
.55= >
Value55> C
)55C D
.55D E

AppendLine55E O
(55O P
)55P Q
;55Q R
}66 
}77 
for99 
(99 
var99 
i99 
=99 
$num99 
;99 
i99 
<99 
contentPartBuilders99  3
.993 4
Count994 9
;999 :
i99; <
++99< >
)99> ?
{:: 
sbo;; 
.;; 
Append;; 
(;; 
contentPartBuilders;; .
[;;. /
i;;/ 0
];;0 1
.;;1 2
Build;;2 7
(;;7 8
);;8 9
);;9 :
.;;: ;

AppendLine;;; E
(;;E F
(;;F G
i;;G H
==;;I K
(;;L M
contentPartBuilders;;M `
.;;` a
Count;;a f
-;;g h
$num;;i j
);;j k
);;k l
?;;m n
$str;;o q
:;;r s
$str;;t w
);;w x
;;;x y
}<< 
sbo>> 
.>> 
Append>> 
(>> 
$char>> 
)>> 
.>> 

AppendLine>> &
(>>& '
)>>' (
;>>( )
return@@ 
sbo@@ 
.@@ 
ToString@@ 
(@@  
)@@  !
;@@! "
}AA 	
}BB 
}CC Õ|
éC:\Users\jay.ahir\Desktop\OrchardCore-main\OrchardCore-main\src\OrchardCore\OrchardCore.Apis.GraphQL.Client\ContentTypeQueryResourceBuilder.cs
	namespace 	
OrchardCore
 
. 
Apis 
. 
GraphQL "
." #
Client# )
{ 
public 

class +
ContentTypeQueryResourceBuilder 0
{		 
private

 
string

 
_contentType

 #
;

# $
private 
List 
< 
string 
> 
_keys "
=# $
new% (
List) -
<- .
string. 4
>4 5
(5 6
)6 7
;7 8
private 
IDictionary 
< 
string "
," #
object$ *
>* +
_queries, 4
=5 6
new7 :

Dictionary; E
<E F
stringF L
,L M
objectN T
>T U
(U V
)V W
;W X
private 
List 
< +
ContentTypeQueryResourceBuilder 4
>4 5
_nested6 =
=> ?
new@ C
ListD H
<H I+
ContentTypeQueryResourceBuilderI h
>h i
(i j
)j k
;k l
public +
ContentTypeQueryResourceBuilder .
(. /
string/ 5
contentType6 A
)A B
{ 	
_contentType 
= 
contentType &
.& '!
ToGraphQLStringFormat' <
(< =
)= >
;> ?
} 	
public +
ContentTypeQueryResourceBuilder .
	WithField/ 8
(8 9
string9 ?
name@ D
)D E
{ 	
_keys 
. 
Add 
( 
name 
. !
ToGraphQLStringFormat 0
(0 1
)1 2
)2 3
;3 4
return 
this 
; 
} 	
public +
ContentTypeQueryResourceBuilder .
WithNestedField/ >
(> ?
string? E
	fieldNameF O
)O P
{ 	
var 
builder 
= 
new +
ContentTypeQueryResourceBuilder =
(= >
	fieldName> G
)G H
;H I
_nested 
. 
Add 
( 
builder 
)  
;  !
return   
builder   
;   
}!! 	
public## +
ContentTypeQueryResourceBuilder## .
WithQueryArgument##/ @
(##@ A
string##A G
argument##H P
,##P Q
string##R X
value##Y ^
)##^ _
{$$ 	
if%% 
(%% 
_queries%% 
.%% 
ContainsKey%% $
(%%$ %
argument%%% -
)%%- .
)%%. /
{&& 
throw'' 
new'' 
	Exception'' #
(''# $
$"''$ &
$str''& ?
{''? @
argument''@ H
}''H I
"''I J
)''J K
;''K L
}(( 
else)) 
{** 
_queries++ 
.++ 
Add++ 
(++ 
argument++ %
,++% &
value++' ,
)++, -
;++- .
},, 
return.. 
this.. 
;.. 
}// 	
public11 +
ContentTypeQueryResourceBuilder11 .#
WithQueryStringArgument11/ F
(11F G
string11G M
argument11N V
,11V W
string11X ^
value11_ d
)11d e
{22 	
return33 
WithQueryArgument33 $
(33$ %
argument33% -
,33- .
$"33/ 1
$str331 3
{333 4
value334 9
}339 :
$str33: <
"33< =
)33= >
;33> ?
}44 	
public66 +
ContentTypeQueryResourceBuilder66 .
WithQueryArgument66/ @
(66@ A
string66A G
argument66H P
,66P Q
string66R X
	fieldName66Y b
,66b c
string66d j

fieldValue66k u
)66u v
{77 	
if99 
(99 
_queries99 
.99 
TryGetValue99 $
(99$ %
argument99% -
,99- .
out99/ 2
var993 6
queryValues997 B
)99B C
&&99D F
queryValues99G R
is99S U
string99V \
)99\ ]
{:: 
throw;; 
new;; 
	Exception;; #
(;;# $
$";;$ &
$str;;& ?
{;;? @
argument;;@ H
};;H I
";;I J
);;J K
;;;K L
}<< 
else>> 
if>> 
(>> 
queryValues>>  
is>>! #
IDictionary>>$ /
<>>/ 0
string>>0 6
,>>6 7
string>>8 >
>>>> ?
)>>? @
{?? 
(@@ 
(@@ 
IDictionary@@ 
<@@ 
string@@ $
,@@$ %
string@@& ,
>@@, -
)@@- .
queryValues@@. 9
)@@9 :
.AA 
AddAA 
(AA 
	fieldNameAA "
.AA" #!
ToGraphQLStringFormatAA# 8
(AA8 9
)AA9 :
,AA: ;

fieldValueAA< F
)AAF G
;AAG H
}BB 
elseCC 
{DD 
_queriesEE 
.EE 
AddEE 
(EE 
argumentEE %
,EE% &
newEE' *

DictionaryEE+ 5
<EE5 6
stringEE6 <
,EE< =
stringEE> D
>EED E
(EEE F
)EEF G
{FF 
{GG 
	fieldNameGG 
.GG  !
ToGraphQLStringFormatGG  5
(GG5 6
)GG6 7
,GG7 8

fieldValueGG: D
}GGE F
}HH 
)HH 
;HH 
}II 
returnKK 
thisKK 
;KK 
}LL 	
publicNN +
ContentTypeQueryResourceBuilderNN .#
WithQueryStringArgumentNN/ F
(NNF G
stringNNG M
argumentNNN V
,NNV W
stringNNX ^
	fieldNameNN_ h
,NNh i
stringNNj p

fieldValueNNq {
)NN{ |
{OO 	
returnPP 
WithQueryArgumentPP $
(PP$ %
argumentPP% -
,PP- .
	fieldNamePP/ 8
,PP8 9
$"PP: <
$strPP< >
{PP> ?

fieldValuePP? I
}PPI J
$strPPJ L
"PPL M
)PPM N
;PPN O
}QQ 	
publicSS +
ContentTypeQueryResourceBuilderSS .#
WithNestedQueryArgumentSS/ F
(SSF G
stringSSG M
argumentSSN V
,SSV W
stringSSX ^
	fieldNameSS_ h
,SSh i
stringSSj p

fieldValueSSq {
)SS{ |
{TT 	
ifVV 
(VV 
_queriesVV 
.VV 
TryGetValueVV $
(VV$ %
argumentVV% -
,VV- .
outVV/ 2
varVV3 6
queryValuesVV7 B
)VVB C
&&VVD F
queryValuesVVG R
isVVS U
stringVVV \
)VV\ ]
{WW 
throwXX 
newXX 
	ExceptionXX #
(XX# $
$"XX$ &
$strXX& ?
{XX? @
argumentXX@ H
}XXH I
"XXI J
)XXJ K
;XXK L
}YY 
else[[ 
if[[ 
([[ 
queryValues[[  
is[[! #
IDictionary[[$ /
<[[/ 0
string[[0 6
,[[6 7
string[[8 >
>[[> ?
)[[? @
{\\ 
(]] 
(]] 
IDictionary]] 
<]] 
string]] $
,]]$ %
string]]& ,
>]], -
)]]- .
queryValues]]. 9
)]]9 :
.^^ 
Add^^ 
(^^ 
	fieldName^^ "
.^^" #!
ToGraphQLStringFormat^^# 8
(^^8 9
)^^9 :
,^^: ;
$"^^< >
$str^^> A
{^^A B

fieldValue^^B L
}^^L M
$str^^M P
"^^P Q
)^^Q R
;^^R S
}__ 
else`` 
{aa 
_queriesbb 
.bb 
Addbb 
(bb 
argumentbb %
,bb% &
newbb' *

Dictionarybb+ 5
<bb5 6
stringbb6 <
,bb< =
stringbb> D
>bbD E
(bbE F
)bbF G
{cc 
{dd 
	fieldNamedd 
.dd  !
ToGraphQLStringFormatdd  5
(dd5 6
)dd6 7
,dd7 8
$"dd: <
$strdd< ?
{dd? @

fieldValuedd@ J
}ddJ K
$strddK N
"ddN O
}ddP Q
}ee 
)ee 
;ee 
}ff 
returnhh 
thishh 
;hh 
}ii 	
publickk 
stringkk 
Buildkk 
(kk 
)kk 
{ll 	
varmm 
sbmm 
=mm 
newmm 
StringBuildermm &
(mm& '
_contentTypemm' 3
)mm3 4
;mm4 5
ifoo 
(oo 
_queriesoo 
.oo 
Countoo 
>oo  
$numoo! "
)oo" #
{pp 
sbqq 
.qq 
Appendqq 
(qq 
$charqq 
)qq 
;qq 
forss 
(ss 
varss 
iss 
=ss 
$numss 
;ss 
iss  !
<ss" #
_queriesss$ ,
.ss, -
Countss- 2
;ss2 3
iss4 5
++ss5 7
)ss7 8
{tt 
varuu 
queryuu 
=uu 
_queriesuu  (
.uu( )
	ElementAtuu) 2
(uu2 3
iuu3 4
)uu4 5
;uu5 6
ifww 
(ww 
iww 
>ww 
$numww 
)ww 
{xx 
sbyy 
.yy 
Appendyy !
(yy! "
$charyy" %
)yy% &
;yy& '
}zz 
if}} 
(}} 
query}} 
.}} 
Value}} #
is}}$ &
string}}' -
)}}- .
{~~ 
sb 
. 
Append !
(! "
query" '
.' (
Key( +
)+ ,
., -
Append- 3
(3 4
$str4 8
)8 9
.9 :
Append: @
(@ A
queryA F
.F G
ValueG L
)L M
;M N
}
ÄÄ 
else
ÇÇ 
{
ÉÉ 
sb
ÑÑ 
.
ÑÑ 
Append
ÑÑ !
(
ÑÑ! "
query
ÑÑ" '
.
ÑÑ' (
Key
ÑÑ( +
)
ÑÑ+ ,
.
ÑÑ, -
Append
ÑÑ- 3
(
ÑÑ3 4
$str
ÑÑ4 8
)
ÑÑ8 9
;
ÑÑ9 :
var
ÜÜ 
fieldValuePair
ÜÜ *
=
ÜÜ+ ,
(
ÜÜ- .
IDictionary
ÜÜ. 9
<
ÜÜ9 :
string
ÜÜ: @
,
ÜÜ@ A
string
ÜÜB H
>
ÜÜH I
)
ÜÜI J
query
ÜÜJ O
.
ÜÜO P
Value
ÜÜP U
;
ÜÜU V
for
áá 
(
áá 
var
áá  
c
áá! "
=
áá# $
$num
áá% &
;
áá& '
c
áá( )
<
áá* +
fieldValuePair
áá, :
.
áá: ;
Count
áá; @
;
áá@ A
c
ááB C
++
ááC E
)
ááE F
{
àà 
var
ââ 
item
ââ  $
=
ââ% &
fieldValuePair
ââ' 5
.
ââ5 6
	ElementAt
ââ6 ?
(
ââ? @
c
ââ@ A
)
ââA B
;
ââB C
sb
ãã 
.
ãã 
Append
ãã %
(
ãã% &
item
ãã& *
.
ãã* +
Key
ãã+ .
)
ãã. /
.
ãã/ 0
Append
ãã0 6
(
ãã6 7
$str
ãã7 ;
)
ãã; <
.
ãã< =
Append
ãã= C
(
ããC D
item
ããD H
.
ããH I
Value
ããI N
)
ããN O
;
ããO P
if
çç 
(
çç  
c
çç  !
<
çç" #
(
çç$ %
fieldValuePair
çç% 3
.
çç3 4
Count
çç4 9
-
çç: ;
$num
çç< =
)
çç= >
)
çç> ?
{
éé 
sb
èè  "
.
èè" #
Append
èè# )
(
èè) *
$str
èè* .
)
èè. /
;
èè/ 0
}
êê 
else
ëë  
{
íí 
sb
ìì  "
.
ìì" #
Append
ìì# )
(
ìì) *
$char
ìì* -
)
ìì- .
;
ìì. /
}
îî 
}
ïï 
if
óó 
(
óó 
i
óó 
<
óó 
(
óó  !
_queries
óó! )
.
óó) *
Count
óó* /
-
óó0 1
$num
óó2 3
)
óó3 4
)
óó4 5
{
òò 
sb
ôô 
.
ôô 
Append
ôô %
(
ôô% &
$str
ôô& *
)
ôô* +
;
ôô+ ,
}
öö 
}
õõ 
}
úú 
sb
ûû 
.
ûû 
Append
ûû 
(
ûû 
$char
ûû 
)
ûû 
;
ûû 
}
üü 
var
°° 
	hasFields
°° 
=
°° 
_keys
°° !
.
°°! "
Count
°°" '
>
°°( )
$num
°°* +
||
°°, .
_nested
°°/ 6
.
°°6 7
Count
°°7 <
>
°°= >
$num
°°? @
;
°°@ A
sb
££ 
.
££ 
Append
££ 
(
££ 
	hasFields
££ 
?
££  !
$str
££" '
:
££( )
$str
££* .
)
££. /
;
££/ 0
sb
•• 
.
•• 

AppendJoin
•• 
(
•• 
$char
•• 
,
•• 
_keys
•• $
)
••$ %
;
••% &
if
ßß 
(
ßß 
_nested
ßß 
.
ßß 
Count
ßß 
>
ßß 
$num
ßß  !
)
ßß! "
{
®® 
if
©© 
(
©© 
_keys
©© 
.
©© 
Count
©© 
>
©©  !
$num
©©" #
)
©©# $
{
™™ 
sb
´´ 
.
´´ 
Append
´´ 
(
´´ 
$char
´´ !
)
´´! "
;
´´" #
}
¨¨ 
var
ÆÆ 
first
ÆÆ 
=
ÆÆ 
true
ÆÆ  
;
ÆÆ  !
foreach
∞∞ 
(
∞∞ 
var
∞∞ 
item
∞∞ !
in
∞∞" $
_nested
∞∞% ,
)
∞∞, -
{
±± 
if
≤≤ 
(
≤≤ 
!
≤≤ 
first
≤≤ 
)
≤≤ 
{
≥≥ 
sb
¥¥ 
.
¥¥ 
Append
¥¥ !
(
¥¥! "
$char
¥¥" %
)
¥¥% &
;
¥¥& '
}
µµ 
sb
∑∑ 
.
∑∑ 
Append
∑∑ 
(
∑∑ 
item
∑∑ "
.
∑∑" #
Build
∑∑# (
(
∑∑( )
)
∑∑) *
)
∑∑* +
;
∑∑+ ,
first
∏∏ 
=
∏∏ 
false
∏∏ !
;
∏∏! "
}
ππ 
}
∫∫ 
sb
ºº 
.
ºº 
Append
ºº 
(
ºº 
	hasFields
ºº 
?
ºº  !
$str
ºº" &
:
ºº' (
$str
ºº) ,
)
ºº, -
;
ºº- .
return
ΩΩ 
sb
ΩΩ 
.
ΩΩ 
ToString
ΩΩ 
(
ΩΩ 
)
ΩΩ  
.
ΩΩ  !
	TrimStart
ΩΩ! *
(
ΩΩ* +
)
ΩΩ+ ,
;
ΩΩ, -
}
ææ 	
}
øø 
}¿¿ Æ
èC:\Users\jay.ahir\Desktop\OrchardCore-main\OrchardCore-main\src\OrchardCore\OrchardCore.Apis.GraphQL.Client\Extensions\HttpContentExtensions.cs
	namespace 	
OrchardCore
 
. 
Apis 
. 
GraphQL "
." #
Client# )
{ 
internal		 
static		 
class		 !
HttpContentExtensions		 /
{

 
public 
static 
async 
Task  
<  !
T! "
>" #
ReadAsAsync$ /
</ 0
T0 1
>1 2
(2 3
this3 7
HttpContent8 C
contentD K
,K L
JsonConverterM Z
jsonConverter[ h
)h i
{ 	
using 
( 
var 
stream 
= 
await  %
content& -
.- .
ReadAsStreamAsync. ?
(? @
)@ A
)A B
using 
( 
var 
reader 
= 
new  #
StreamReader$ 0
(0 1
stream1 7
)7 8
)8 9
using 
( 
var 

jsonReader !
=" #
new$ '
JsonTextReader( 6
(6 7
reader7 =
)= >
)> ?
{ 
var 
ser 
= 
new 
JsonSerializer ,
(, -
)- .
;. /
ser 
. 

Converters 
. 
Insert %
(% &
$num& '
,' (
jsonConverter) 6
)6 7
;7 8
return 
ser 
. 
Deserialize &
<& '
T' (
>( )
() *

jsonReader* 4
)4 5
;5 6
} 
} 	
public 
static 
async 
Task  
<  !
T! "
>" #
ReadAsAsync$ /
</ 0
T0 1
>1 2
(2 3
this3 7
HttpContent8 C
contentD K
)K L
{ 	
using 
( 
var 
data 
= 
await #
content$ +
.+ ,
ReadAsStreamAsync, =
(= >
)> ?
)? @
{ 
return 
data 
. 
ReadAs "
<" #
T# $
>$ %
(% &
)& '
;' (
} 
} 	
public 
static 
T 
ReadAs 
< 
T  
>  !
(! "
this" &
Stream' -
stream. 4
)4 5
{   	
using!! 
(!! 
var!! 
reader!! 
=!! 
new!!  #
StreamReader!!$ 0
(!!0 1
stream!!1 7
)!!7 8
)!!8 9
using"" 
("" 
var"" 

jsonReader"" !
=""" #
new""$ '
JsonTextReader""( 6
(""6 7
reader""7 =
)""= >
)""> ?
{## 
var$$ 
jsonSerializer$$ "
=$$# $
new$$% (
JsonSerializer$$) 7
{%% 
NullValueHandling&& %
=&&& '
NullValueHandling&&( 9
.&&9 :
Ignore&&: @
,&&@ A

Converters'' 
=''  
{''! "
new''# &
StringEnumConverter''' :
('': ;
)''; <
}''= >
}(( 
;(( 
return** 
jsonSerializer** %
.**% &
Deserialize**& 1
<**1 2
T**2 3
>**3 4
(**4 5

jsonReader**5 ?
)**? @
;**@ A
}++ 
},, 	
}-- 
}.. ÆJ
èC:\Users\jay.ahir\Desktop\OrchardCore-main\OrchardCore-main\src\OrchardCore\OrchardCore.Apis.GraphQL.Client\Extensions\HttpRequestExtensions.cs
	namespace 	
OrchardCore
 
. 
Apis 
. 
GraphQL "
." #
Client# )
{		 
internal 
static 
class !
HttpRequestExtensions /
{ 
private 
readonly 
static "
JsonSerializerSettings  6
JsonSettings7 C
=D E
newF I"
JsonSerializerSettingsJ `
(` a
)a b
{ 	
NullValueHandling 
= 
NullValueHandling  1
.1 2
Ignore2 8
} 	
;	 

public(( 
static(( 
Task(( 
<(( 
HttpResponseMessage(( .
>((. /
PatchAsJsonAsync((0 @
<((@ A
T((A B
>((B C
(((C D
this)) 

HttpClient)) 
client)) "
,))" #
string** 

requestUri** 
,** 
T++ 
value++ 
,++ "
JsonSerializerSettings,, "
settings,,# +
=,,, -
null,,. 2
),,2 3
{-- 	
var.. 
content.. 
=.. 
new.. 
StringContent.. +
(..+ ,
JsonConvert// 
.// 
SerializeObject// +
(//+ ,
value//, 1
,//1 2
settings//3 ;
??//< >
JsonSettings//? K
)//K L
,//L M
Encoding00 
.00 
UTF800 
,00 
$str11 "
)11" #
;11# $
return33 !
HttpRequestExtensions33 (
.33( )

PatchAsync33) 3
(333 4
client334 :
,33: ;

requestUri33< F
,33F G
content33H O
)33O P
;33P Q
}44 	
publicEE 
staticEE 
TaskEE 
<EE 
HttpResponseMessageEE .
>EE. /

PatchAsyncEE0 :
(EE: ;
thisFF 

HttpClientFF 
clientFF "
,FF" #
stringGG 

requestUriGG 
,GG 
HttpContentHH 
contentHH 
)HH  
{II 	
varJJ 
requestJJ 
=JJ 
newJJ 
HttpRequestMessageJJ 0
{KK 
MethodLL 
=LL 
newLL 

HttpMethodLL '
(LL' (
$strLL( /
)LL/ 0
,LL0 1

RequestUriMM 
=MM 
newMM  
UriMM! $
(MM$ %
clientMM% +
.MM+ ,
BaseAddressMM, 7
+MM8 9

requestUriMM: D
)MMD E
,MME F
ContentNN 
=NN 
contentNN !
}OO 
;OO 
requestQQ 
.QQ 
HeadersQQ 
.QQ 
ExpectContinueQQ *
=QQ+ ,
falseQQ- 2
;QQ2 3
returnRR 
clientRR 
.RR 
	SendAsyncRR #
(RR# $
requestRR$ +
)RR+ ,
;RR, -
}SS 	
publicii 
staticii 
Taskii 
<ii 
HttpResponseMessageii .
>ii. /
PutAsJsonAsyncii0 >
<ii> ?
Tii? @
>ii@ A
(iiA B
thisjj 

HttpClientjj 
clientjj "
,jj" #
stringkk 

requestUrikk 
,kk 
Tll 
valuell 
,ll "
JsonSerializerSettingsmm "
settingsmm# +
=mm, -
nullmm. 2
)mm2 3
{nn 	
varoo 
contentoo 
=oo 
newoo 
StringContentoo +
(oo+ ,
JsonConvertpp 
.pp 
SerializeObjectpp +
(pp+ ,
valuepp, 1
,pp1 2
settingspp3 ;
??pp< >
JsonSettingspp? K
)ppK L
,ppL M
Encodingqq 
.qq 
UTF8qq 
,qq 
$strrr "
)rr" #
;rr# $
returntt 
clienttt 
.tt 
PutAsynctt "
(tt" #

requestUritt# -
,tt- .
contenttt/ 6
)tt6 7
;tt7 8
}uu 	
public
ãã 
static
ãã 
Task
ãã 
<
ãã !
HttpResponseMessage
ãã .
>
ãã. /
PostAsJsonAsync
ãã0 ?
<
ãã? @
T
ãã@ A
>
ããA B
(
ããB C
this
åå 

HttpClient
åå 
client
åå "
,
åå" #
string
çç 

requestUri
çç 
,
çç 
T
éé 
value
éé 
,
éé $
JsonSerializerSettings
èè "
settings
èè# +
=
èè, -
null
èè. 2
)
èè2 3
{
êê 	
var
ëë 
content
ëë 
=
ëë 
new
ëë 
StringContent
ëë +
(
ëë+ ,
JsonConvert
íí 
.
íí 
SerializeObject
íí +
(
íí+ ,
value
íí, 1
,
íí1 2
settings
íí3 ;
??
íí< >
JsonSettings
íí? K
)
ííK L
,
ííL M
Encoding
ìì 
.
ìì 
UTF8
ìì 
,
ìì 
$str
îî "
)
îî" #
;
îî# $
var
ññ 
request
ññ 
=
ññ 
new
ññ  
HttpRequestMessage
ññ 0
(
ññ0 1

HttpMethod
ññ1 ;
.
ññ; <
Post
ññ< @
,
ññ@ A

requestUri
ññB L
)
ññL M
;
ññM N
request
óó 
.
óó 
Content
óó 
=
óó 
content
óó %
;
óó% &
request
ôô 
.
ôô 
Headers
ôô 
.
öö 
Accept
öö 
.
õõ 
Add
õõ 
(
õõ 
new
õõ -
MediaTypeWithQualityHeaderValue
õõ 8
(
õõ8 9
$str
õõ9 K
)
õõK L
)
õõL M
;
õõM N
return
ùù 
client
ùù 
.
ùù 
	SendAsync
ùù #
(
ùù# $
request
ùù$ +
)
ùù+ ,
;
ùù, -
}
ûû 	
public
†† 
static
†† 
Task
†† 
<
†† !
HttpResponseMessage
†† .
>
††. /
PostJsonAsync
††0 =
(
††= >
this
°° 

HttpClient
°° 
client
°° "
,
°°" #
string
¢¢ 

requestUri
¢¢ 
,
¢¢ 
string
££ 
json
££ 
)
££ 
{
§§ 	
var
•• 
content
•• 
=
•• 
new
•• 
StringContent
•• +
(
••+ ,
json
¶¶ 
,
¶¶ 
Encoding
ßß 
.
ßß 
UTF8
ßß 
,
ßß 
$str
®® "
)
®®" #
;
®®# $
var
™™ 
request
™™ 
=
™™ 
new
™™  
HttpRequestMessage
™™ 0
(
™™0 1

HttpMethod
™™1 ;
.
™™; <
Post
™™< @
,
™™@ A

requestUri
™™B L
)
™™L M
;
™™M N
request
´´ 
.
´´ 
Content
´´ 
=
´´ 
content
´´ %
;
´´% &
request
≠≠ 
.
≠≠ 
Headers
≠≠ 
.
ÆÆ 
Accept
ÆÆ 
.
ØØ 
Add
ØØ 
(
ØØ 
new
ØØ -
MediaTypeWithQualityHeaderValue
ØØ 8
(
ØØ8 9
$str
ØØ9 K
)
ØØK L
)
ØØL M
;
ØØM N
return
±± 
client
±± 
.
±± 
	SendAsync
±± #
(
±±# $
request
±±$ +
)
±±+ ,
;
±±, -
}
≤≤ 	
public
¥¥ 
static
¥¥ 
Task
¥¥ 
<
¥¥ !
HttpResponseMessage
¥¥ .
>
¥¥. /
PostJsonApiAsync
¥¥0 @
(
¥¥@ A
this
µµ 

HttpClient
µµ 
client
µµ "
,
µµ" #
string
∂∂ 

requestUri
∂∂ 
,
∂∂ 
string
∑∑ 
json
∑∑ 
)
∑∑ 
{
∏∏ 	
var
ππ 
content
ππ 
=
ππ 
new
ππ 
StringContent
ππ +
(
ππ+ ,
json
∫∫ 
,
∫∫ 
Encoding
ªª 
.
ªª 
UTF8
ªª 
,
ªª 
$str
ºº *
)
ºº* +
;
ºº+ ,
var
ææ 
request
ææ 
=
ææ 
new
ææ  
HttpRequestMessage
ææ 0
(
ææ0 1

HttpMethod
ææ1 ;
.
ææ; <
Post
ææ< @
,
ææ@ A

requestUri
ææB L
)
ææL M
;
ææM N
request
øø 
.
øø 
Content
øø 
=
øø 
content
øø %
;
øø% &
request
¡¡ 
.
¡¡ 
Headers
¡¡ 
.
¬¬ 
Accept
¬¬ 
.
√√ 
Add
√√ 
(
√√ 
new
√√ -
MediaTypeWithQualityHeaderValue
√√ 8
(
√√8 9
$str
√√9 S
)
√√S T
)
√√T U
;
√√U V
return
≈≈ 
client
≈≈ 
.
≈≈ 
	SendAsync
≈≈ #
(
≈≈# $
request
≈≈$ +
)
≈≈+ ,
;
≈≈, -
}
∆∆ 	
}
«« 
}»» º
äC:\Users\jay.ahir\Desktop\OrchardCore-main\OrchardCore-main\src\OrchardCore\OrchardCore.Apis.GraphQL.Client\Extensions\StringExtensions.cs
	namespace 	
OrchardCore
 
. 
Apis 
. 
GraphQL "
." #
Client# )
{ 
internal 
static 
class 
StringExtensions *
{ 
public 
static 
string !
ToGraphQLStringFormat 2
(2 3
this3 7
string8 >
value? D
)D E
{ 	
return 
char 
. 
ToLower 
(  
value  %
[% &
$num& '
]' (
)( )
+* +
value, 1
.1 2
	Substring2 ;
(; <
$num< =
)= >
;> ?
} 	
}		 
}

 ƒ
ÉC:\Users\jay.ahir\Desktop\OrchardCore-main\OrchardCore-main\src\OrchardCore\OrchardCore.Apis.GraphQL.Client\OrchardGraphQLClient.cs
	namespace 	
OrchardCore
 
. 
Apis 
. 
GraphQL "
." #
Client# )
{ 
public 

class  
OrchardGraphQLClient %
{ 
public  
OrchardGraphQLClient #
(# $

HttpClient$ .
client/ 5
)5 6
{ 	
Client		 
=		 
client		 
;		 
}

 	
public 
ContentResource 
Content &
=>' )
new* -
ContentResource. =
(= >
Client> D
)D E
;E F
public 

HttpClient 
Client  
{! "
get# &
;& '
}( )
} 
} 